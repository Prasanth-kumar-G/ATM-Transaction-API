<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="withdraw.implSub_Flow" doc:id="54416f92-9ba8-473a-b73f-f28f75060724" >
		<ee:transform doc:name="Transform Message" doc:id="3387dde5-faf9-45c5-acae-753dffab09e4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  "accountNum": payload.accountNum,
  "atmPin": payload.atmPin,
  "amountToBeWithdraw" : payload.amountToBeWithdraw,
  "bank" : attributes.queryParams.bank,
  "Type": attributes.queryParams."type"
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="Org_payload" ><![CDATA[%dw 2.0
output application/json
---
{
  "accountNum": payload.accountNum,
  "atmPin": payload.atmPin,
  "amountToBeWithdraw" : payload.amountToBeWithdraw,
  "bank" : attributes.queryParams.bank,
  "Type": attributes.queryParams."type"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:select doc:name="Select" doc:id="93e289a1-4860-4ad5-a2a3-583bbd13f85c" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM bank_transactions;]]></db:sql>
		</db:select>
		<set-variable value="#[payload]" doc:name="DB" doc:id="be2774a7-ab0e-4f33-b1bb-44accbcfd9c2" variableName="DB"/>
		<choice doc:name="Choice" doc:id="a0305f84-367b-4fc9-88ec-974994833c9c" >
			<when expression="#[vars.DB.custAccNum[0] == vars.Org_payload.accountNum and vars.DB.bankName[0] == vars.Org_payload.bank]">
				<choice doc:name="Choice" doc:id="63e2ca24-9ae2-4631-b32c-f76485171ad6" >
					<when expression='#[vars.DB.accountStatus[0] == "Active"]'>
						<choice doc:name="Choice" doc:id="996792fb-64a1-4066-bd93-ec012f4e8245" >
							<when expression="#[vars.Org_payload.atmPin == vars.DB.atmPin[0]]">
								<choice doc:name="Choice" doc:id="b4df16bd-d79d-447c-b262-3d89159d4f5c" >
									<when expression="#[vars.Org_payload.amountToBeWithdraw &lt;= vars.DB.totalBalance[0]]">
										<ee:transform doc:name="Transform Message" doc:id="aadb4e87-ec4d-4d9f-b0b3-5b3b2c932c43" >
											<ee:message >
												<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	Remaining: (vars.DB.totalBalance[0] - vars.Org_payload.amountToBeWithdraw) as Number
}]]></ee:set-payload>
											</ee:message>
										</ee:transform>
										<db:update doc:name="Update" doc:id="9894cc6f-2e72-42f2-b46e-b73be7f6d658" config-ref="Database_Config">
											<db:sql ><![CDATA[UPDATE Bank_Transactions 
SET totalBalance = :Remaining
WHERE custAccNum = :accountNum ;]]></db:sql>
											<db:input-parameters ><![CDATA[#[{
	Remaining: payload.Remaining,
	accountNum: vars.DB.custAccNum[0]
}]]]></db:input-parameters>
										</db:update>
										<db:select doc:name="Select" doc:id="13aba6a4-cee6-40c0-b24f-69b97ad8bd0f" config-ref="Database_Config">
											<db:sql ><![CDATA[select * from bank_transactions where custAccNum = :acountNum ;]]></db:sql>
											<db:input-parameters ><![CDATA[#[{
	acountNum: vars.DB.custAccNum[0]
}]]]></db:input-parameters>
										</db:select>
										<ee:transform doc:name="Transform Message" doc:id="0386ab0c-7420-4571-a69c-62f54b671f84" >
											<ee:message >
												<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	status: "Your Account has been debited with " ++ vars.Org_payload.amountToBeWithdraw ++ " and the Remaining Balance is: " ++ payload.totalBalance[0]
}]]></ee:set-payload>
											</ee:message>
										</ee:transform>
									</when>
									<otherwise >
										<ee:transform doc:name="Transform Message" doc:id="6582bfa3-9942-4316-9caa-1548987e5c75" >
											<ee:message >
												<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	status: "Insufficient Funds”"
}]]></ee:set-payload>
											</ee:message>
										</ee:transform>
									</otherwise>
								</choice>
							</when>
							<otherwise >
								<flow-ref doc:name="withdraw_Invalid_ATM_Pin" doc:id="7c7af45b-64f6-4d0a-a8da-71c8b3c387b1" name="withdraw_Invalid_ATM_Pin" targetValue="#[vars.DB]"/>
							</otherwise>
						</choice>
					</when>
					<otherwise >
						<ee:transform doc:name="Transform Message" doc:id="99598744-413e-4bcc-991b-cd5fb3528456" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	status: "Account " ++ vars.DB.custAccNum[0] ++ " temporarily blocked,Please visit nearest Branch"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="fa5c3990-fd08-4578-8857-c163a820c8f5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	status: "Account " ++ vars.Org_payload.accountNum++ " does not exist, Enter Valid Details"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="withdraw_Invalid_ATM_Pin" doc:id="73a164cb-9592-48c9-989e-b903f3c4ac48" >
		<db:update doc:name="Update" doc:id="ec80a29b-4cd7-492b-947b-980bfe8078d5" config-ref="Database_Config">
									<db:sql><![CDATA[UPDATE Bank_Transactions 
SET wrongPin = (:wrongPin)
WHERE custAccNum = :AccountNum ;]]></db:sql>
									<db:input-parameters><![CDATA[#[{
	AccountNum: vars.DB.custAccNum[0],
	wrongPin: vars.DB.wrongPin[0] + 1

}]]]></db:input-parameters>
								</db:update>
		<db:select doc:name="Select" doc:id="47241638-0151-451e-b51a-554a16fea45d" config-ref="Database_Config" target="Pin_remain">
									<db:sql><![CDATA[select * from Bank_Transactions where custAccNum = :customerNum ;]]></db:sql>
									<db:input-parameters><![CDATA[#[{
	customerNum: vars.Org_payload.accountNum
}]]]></db:input-parameters>
								</db:select>
		<set-variable doc:name="Attempts" doc:id="94b0c1d0-ff49-4bb0-8f6b-7aa0bbbe682d" variableName="Attempts" value="#[vars.Pin_remain.wrongPin[0]]" />
		<db:update doc:name="Update" doc:id="cf25e4ff-ef4f-4255-84fc-12538471dced" config-ref="Database_Config">
									<db:sql><![CDATA[UPDATE Bank_Transactions 
SET accountStatus = (:accountStatus)
WHERE custAccNum = :AccountNum ;]]></db:sql>
									<db:input-parameters><![CDATA[#[{
	AccountNum: vars.Org_payload.accountNum ,
	accountStatus: "blocked"
}]]]></db:input-parameters>
								</db:update>
		<ee:transform doc:name="Transform Message" doc:id="e2856f6b-6730-4364-a1fd-24817c5d4d44">
									<ee:message>
										<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"Alert" : if(vars.Attempts <= 3) ("Invalid PIN. Remaining Attempts Left: " ++ (3 - vars.Pin_remain.wrongPin[0]) as String ) else "Maximum Attempts reached. Your Account " ++ vars.Org_payload.accountNum ++" is
temporarily blocked. Please reach nearest Branch"
}]]></ee:set-payload>
									</ee:message>
								</ee:transform>
	</sub-flow>

</mule>
